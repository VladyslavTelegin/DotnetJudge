/**
* Hard
* Write a function that takes in an array of integers and returns an array of length 2 representing the largest range of integers contained in that array.
* The first number in the output array should be the first number in the range, while the second number should be the last number in the range.
* A range of numbers is defined as a set of numbers that come right after each other in the set of real integers. For instance, the output
* array [2,6] represents the range {2, 3, 4, 5, 6}, which is a range of length 5. Note that numbers don't need to be sorted or adjacent in the input
* array in order to form a range.
* Example:
* [1, 11, 3, 0, 15, 5, 2, 4, 10, 7, 12, 6] => (0,7)
*/

using System;
using System.Text;
using System.Linq;
using System.Collections;
using System.Collections.Generic;

public class Program
{
    public static (int, int) GetLargestRange(int[] array)
    {
       int longest = 0;
        (int, int) longestRange = default((int, int));

        var nums = new Dictionary<int, bool>();

        foreach (var n in array)
        {
            nums[n] = true;
        }

        foreach (var n in array)
        {
            if (!nums[n]) continue;

            nums[n] = false;

            int len = 1;
            int left = n - 1;
            int right = n + 1;

            while (nums.ContainsKey(left) && nums[left])
            {
                left--;
                len++;
            }

            while (nums.ContainsKey(right) && nums[right])
            {
                right++;
                len++;
            }

            if (longest < len)
            {
                longest = len;
                longestRange = (left + 1, right - 1);
            }
        }

        return longestRange;
    }
}